# Generated by Django 4.2.6 on 2024-09-19 23:07

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Property',
            fields=[
                ('agency_name', models.CharField(max_length=255)),
                ('agency_product', models.CharField(max_length=255)),
                ('area', models.CharField(max_length=100)),
                ('bathroom', models.IntegerField()),
                ('bedroom', models.IntegerField()),
                ('category', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('contact_name', models.CharField(max_length=255)),
                ('property_id', models.AutoField(primary_key=True, serialize=False)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('location', models.CharField(max_length=255)),
                ('occupancy_status', models.CharField(default='notSpecified', max_length=50)),
                ('ownership_status', models.CharField(default='notSpecified', max_length=50)),
                ('price', models.CharField(max_length=50)),
                ('primary_image', models.URLField(max_length=500)),
                ('primary_mobile_no', models.CharField(max_length=20)),
                ('primary_phone_no', models.CharField(max_length=20)),
                ('primary_video', models.URLField(blank=True, max_length=500, null=True)),
                ('product', models.CharField(max_length=100)),
                ('product_score', models.CharField(max_length=10)),
                ('property_tour', models.URLField(blank=True, max_length=500, null=True)),
                ('purpose', models.CharField(max_length=50)),
                ('short_description', models.TextField()),
                ('state', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=255)),
                ('whatsapp_no', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('agent', 'Real Estate Agent'), ('buyer', 'Buyer')], max_length=20)),
                ('username', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
